name: Run Quality Gate Checks

on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - dev
      - ivan-manzi-ci-pipeline


jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    env:
      JFROG_USER: ${{ secrets.JFROG_USER }}
      JFROG_PSWD: ${{ secrets.JFROG_PSWD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: "temurin"
          cache: "maven" # enable caching for Maven dependencies

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Find modified projects on PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          touch modified-projects.txt
          git show --pretty="format:" --name-only -m ${GITHUB_REF_NAME} | awk -F '/' '{print $1}' | grep -vE '^(\.github|\.gitignore|\.idea|k8s|model|docker-compose\.yml|gravitateDb\.sql|payment_management_service\.iml|pom\.xml)$' | uniq > modified-projects.txt

      - name: Find modified projects on push
        if: ${{ github.event_name == 'push' }}
        run: |
          touch modified-projects.txt
          git show --pretty="format:" --name-only -m ${GITHUB_REF_NAME} | awk -F '/' '{print $1}' | grep -vE '^(\.github|\.gitignore|\.idea|k8s|model|docker-compose\.yml|gravitateDb\.sql|payment_management_service\.iml|pom\.xml)$' | uniq > modified-projects.txt

      - name: Print modified projects
        run : |
          # Check If the file does not exists and has zero size
          if ! [ -s modified-projects.txt ]; then
            echo "No modified project found!"
            exit 0
          else
            echo "Below are modified projects:"
            echo "-----------------------------"
            cat modified-projects.txt
          fi

      - name: Build and analyze
        run: |

          # Check If the file does not exists and has zero size
          if ! [ -s modified-projects.txt ]; then
            echo "No modified projects found, skipping sonarcloud check..."
            exit 0
          fi
        
          #number of parallel jobs running 
          file="modified-projects.txt"
          count=$(wc -l < "$file")
          echo "The number of parallel jobs needed to run is: $count"
          
          while read project; do
            # Check if $project is a directory
            if test -d "$project"; then
              (
              echo "Starting quality gate check and security scan on $project"
              cd $project
          
              echo "Running sonarcloud quality gate and security checks..."
              mvn clean install spring-boot:repackage
	      echo "checks completed for module $project. "	
              cd ..
              )&
            else
              echo "$dir is not a directory, skipping..."
            fi

          done < modified-projects.txt
          wait
          

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.content_manager_service.dao.BlogDao" >

    <insert id="createBlog" parameterType="com.model.BlogVO">
        INSERT INTO blog
        (user_id,title,tags,problem_description,topic_thumbnail)
        VALUES
        (#{userId},#{title},#{tags},#{problemDescription},#{topicThumbnail})
    </insert>

    <resultMap id="tResult" type="Map">
        <collection property="comments" ofType="com.model.BlogReplyVO" select="selectBlogReply" column="blog_id" />
    </resultMap>

    <select id="getAllTeamMembersBlogs" resultMap="tResult">
        SELECT T.blog_id,T.title,T.tags,T.problem_description,T.topic_thumbnail,U.email,U.first_name,U.last_name,U.user_type FROM blog T
        INNER JOIN app_user U
        ON
        T.user_id = U.user_id
        <!--<if test="search != null">
            AND T.title = #{search}
        </if>-->
    </select>

    <resultMap id="BlogCommentsResult" type="Map">
        <collection property="sub_comments" ofType="com.model.BlogReplyVO" select="getBlogCommentSubComments" column="blog_reply_id" />
    </resultMap>

    <select id="selectBlogReply" resultMap="BlogCommentsResult">
        SELECT * FROM blog_reply WHERE blog_id = #{blogId} AND parent IS NULL
    </select>

    <!--Get sub comments of a comment-->
    <select id="getBlogCommentSubComments" resultType="com.model.BlogReplyVO">
        SELECT * FROM blog_reply WHERE parent = #{blogReplyId}
    </select>

    <update id="updateBlog" parameterType="com.model.BlogVO">
        UPDATE blog
        SET
        title = #{title},
        tags = #{tags},
        problem_description = #{problemDescription},
        topic_thumbnail = #{topicThumbnail}
        WHERE
        blog_id = #{blogId} AND user_id = #{userId}
    </update>

    <delete id="deleteBlog" parameterType="Long">
        DELETE FROM blog WHERE blog_id = #{blogId}
    </delete>




</mapper>